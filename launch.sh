#!/bin/bash

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[1;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[1;34m'
CYAN='\033[1;36m'
MAGENTA='\033[1;35m'
LIGHTGRAY='\033[1;37m'
NC='\033[0m' # –ë–µ–∑ —Ü–≤–µ—Ç–∞ (reset)

# –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Å–ø–∏–Ω–Ω–µ—Ä –±–µ–∑ bc
spinner() {
    local pid=$1
    local delay=0.1
    local spinstr='|/-\'
    while [ "$(ps a | awk '{print $1}' | grep $pid)" ]; do
        local temp=${spinstr#?}
        printf " [%c]  " "$spinstr"
        local spinstr=$temp${spinstr%"$temp"}
        sleep $delay
        printf "\b\b\b\b\b\b"
    done
    printf "    \b\b\b\b"
}

# –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä –±–µ–∑ bc
progress_bar() {
    local duration=$1
    local bar_length=30
    local sleep_interval=$(awk "BEGIN {print $duration/$bar_length}")

    printf "["
    for ((i=0; i<$bar_length; i++)); do
        printf "‚ñâ"
        sleep $sleep_interval
    done
    printf "]"
    echo
}

# –í—ã–≤–æ–¥ —Å —ç—Ñ—Ñ–µ–∫—Ç–æ–º –ø–µ—á–∞—Ç–∏
print_with_effect() {
    local text=$1
    local color=$2
    local delay=0.02

    printf "${color}"
    for ((i=0; i<${#text}; i++)); do
        printf "${text:$i:1}"
        sleep $delay
    done
    printf "${NC}\n"
}

IP_ADDRESS=$(hostname -I | awk '{print $1}')

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–∞–Ω–¥
check_command() {
    local cmd=$1
    local name=$2

    print_with_effect "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ $name..." $CYAN

    if ! command -v $cmd &> /dev/null; then
        echo -e "${RED}‚úñ $name –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.${NC}"

        # –ü–æ–ø—ã—Ç–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏
        print_with_effect "üîÑ –ü–æ–ø—ã—Ç–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ $name..." $YELLOW

        if [[ $name == "PHP" ]]; then
            (sudo apt install php php-cli php-mbstring php-xml php-mysql -y > /dev/null 2>&1) &
            spinner $!
        elif [[ $name == "Composer" ]]; then
            (php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');" > /dev/null 2>&1
            php composer-setup.php > /dev/null 2>&1
            php -r "unlink('composer-setup.php');" > /dev/null 2>&1
            sudo mv composer.phar /usr/local/bin/composer > /dev/null 2>&1) &
            spinner $!
        elif [[ $name == "Docker" ]]; then
            (sudo apt install docker.io -y > /dev/null 2>&1
            sudo systemctl enable --now docker > /dev/null 2>&1) &
            spinner $!
        elif [[ $name == "npm" ]]; then
            (sudo apt install nodejs npm -y > /dev/null 2>&1) &
            spinner $!
        elif [[ $name == "Docker Compose" ]]; then
            (sudo apt install docker-compose -y > /dev/null 2>&1) &
            spinner $!
        elif [[ $name == "sed" || $name == "awk" ]]; then
            (sudo apt install sed awk -y > /dev/null 2>&1) &
            spinner $!
        fi

        # –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
        if command -v $cmd &> /dev/null; then
            echo -e "${GREEN}‚úî $name —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.${NC}"
            return 0
        else
            echo -e "${RED}‚úñ –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å $name –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.${NC}"
            return 1
        fi
    else
        echo -e "${GREEN}‚úî $name —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.${NC}"
        return 0
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ —Å –ø–æ–ø—ã—Ç–∫–æ–π –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
handle_error() {
    local error_msg=$1
    local cmd=$2

    echo -e "\n${RED}‚ö† –û—à–∏–±–∫–∞: $error_msg${NC}"

    # –ü–æ–ø—ã—Ç–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫
    if [[ $error_msg == *"permission denied"* ]]; then
        print_with_effect "üõ† –ü–æ–ø—ã—Ç–∫–∞ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É —Å –ø—Ä–∞–≤–∞–º–∏..." $YELLOW
        (sudo chmod -R 755 storage
         sudo chown -R $USER:$USER .) &
        spinner $!
    elif [[ $error_msg == *"port is already allocated"* ]]; then
        print_with_effect "üõ† –ü–æ–ø—ã—Ç–∫–∞ –æ—Å–≤–æ–±–æ–¥–∏—Ç—å –∑–∞–Ω—è—Ç—ã–π –ø–æ—Ä—Ç..." $YELLOW
        (docker-compose down > /dev/null 2>&1) &
        spinner $!
        sleep 2
    elif [[ $error_msg == *"No such file or directory"* ]]; then
        print_with_effect "üõ† –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞—Ç—å –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏..." $YELLOW
        (mkdir -p storage/framework/{sessions,views,cache}
         mkdir -p storage/app/{public,private,private/TasksFiles,public/teamlogo}) &
        spinner $!
    elif [[ $error_msg == *"docker daemon"* ]]; then
        print_with_effect "üõ† –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—É—Å—Ç–∏—Ç—å docker daemon..." $YELLOW
        (sudo systemctl start docker > /dev/null 2>&1) &
        spinner $!
        sleep 5
    fi

    # –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –∑–∞–ø—É—Å–∫ –∫–æ–º–∞–Ω–¥—ã –ø–æ—Å–ª–µ –ø–æ–ø—ã—Ç–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    if [ -n "$cmd" ]; then
        print_with_effect "üîÑ –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –∑–∞–ø—É—Å–∫ –∫–æ–º–∞–Ω–¥—ã..." $YELLOW
        if eval "$cmd"; then
            echo -e "${GREEN}‚úî –ü—Ä–æ–±–ª–µ–º–∞ —É—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞.${NC}"
            return
        fi
    fi

    # –ï—Å–ª–∏ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –Ω–µ —É–¥–∞–ª–æ—Å—å - –≤—ã—Ö–æ–¥
    echo -e "${RED}‚úñ –ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.${NC}"
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ bc –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
if ! command -v bc &> /dev/null; then
    echo -e "${YELLOW}–£—Å—Ç–∞–Ω–æ–≤–∫–∞ bc –¥–ª—è —Ä–∞—Å—á–µ—Ç–æ–≤...${NC}"
    sudo apt install bc -y > /dev/null 2>&1
fi

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–∫—Ä–∏–ø—Ç–∞
clear
echo -e "${MAGENTA}"
echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
echo "‚ïë                                                ‚ïë"
echo "‚ïë           –£–°–¢–ê–ù–û–í–û–ß–ù–´–ô –°–ö–†–ò–ü–¢ v2.1            ‚ïë"
echo "‚ïë                                                ‚ïë"
echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
echo -e "${NC}"
print_with_effect "üñ•  IP –∞–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞: $IP_ADDRESS" $CYAN
echo

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª .env.example
if [ -f ".env.example" ]; then
    print_with_effect "üîß –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞..." $CYAN
    # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º —Ñ–∞–π–ª
    if ! mv .env.example .env 2> /dev/null; then
        handle_error "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å .env.example –≤ .env" "mv .env.example .env"
    else
        echo -e "${GREEN}‚úî .env.example –±—ã–ª –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω –≤ .env${NC}"
    fi
else
    echo -e "${YELLOW}‚ö† –§–∞–π–ª .env.example –Ω–µ –Ω–∞–π–¥–µ–Ω.${NC}"
fi

if [ -f ".env" ]; then
    echo -e "${GREEN}‚úî –ù–∞–π–¥–µ–Ω —Ñ–∞–π–ª .env${NC}"
    print_with_effect "üöÄ –ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏..." $CYAN
    echo

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    print_with_effect "üîé –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..." $CYAN
    echo

    CHK=false
    check_command php PHP || CHK=true
    check_command composer Composer || CHK=true
    check_command docker Docker || CHK=true
    check_command npm npm || CHK=true
    check_command docker compose "Docker Compose" || CHK=true
    check_command sed sed || CHK=true
    check_command awk awk || CHK=true

    if $CHK; then
        handle_error "–ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏—Ö –ø–µ—Ä–µ–¥ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ–º."
    fi

    print_with_effect "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..." $CYAN
    (sudo apt update > /dev/null 2>&1) &
    spinner $!
    echo

    print_with_effect "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ composer –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..." $CYAN
    (composer update --ignore-platform-req=ext-xml > /dev/null 2>&1) &
    spinner $!

    (composer install --ignore-platform-req=ext-dom --ignore-platform-req=ext-xml --ignore-platform-req=ext-xmlwriter > /dev/null 2>&1) &
    spinner $!
    echo -e "${GREEN}‚úî –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ.${NC}"
    echo

    print_with_effect "üìÇ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..." $CYAN
    (mkdir -p storage/framework/{sessions,views,cache} > /dev/null 2>&1
     mkdir -p storage/app/{private,public,private/TasksFiles,public/teamlogo} > /dev/null 2>&1
     chmod -R 755 storage/framework > /dev/null 2>&1
     chmod -R 755 storage/app > /dev/null 2>&1
     chmod 755 public > /dev/null 2>&1
     cp public/media/img/StandartLogo.png storage/app/public/teamlogo > /dev/null 2>&1) &
    spinner $!
    echo

    print_with_effect "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ npm –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..." $CYAN
    (npm install > /dev/null 2>&1) &
    spinner $!
    echo

    print_with_effect "‚öô –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ .env —Ñ–∞–π–ª–∞..." $CYAN
    if grep -q "REVERB_HOST=" ".env"; then
        (sed -i "s/^REVERB_HOST=.*/REVERB_HOST=$IP_ADDRESS/" .env > /dev/null 2>&1) &
        spinner $!
        echo -e "${GREEN}‚úî –û–±–Ω–æ–≤–ª–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π REVERB_HOST –≤ .env${NC}"
    else
        (echo "REVERB_HOST=$IP_ADDRESS" >> .env > /dev/null 2>&1) &
        spinner $!
        echo -e "${GREEN}‚úî –î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π REVERB_HOST –≤ .env${NC}"
    fi
    echo

    print_with_effect "üèó –°–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..." $CYAN
    (npm run build > build.log 2>&1) &
    spinner $!
    echo -e "${GREEN}‚úî –°–±–æ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞${NC}"
    echo

    print_with_effect "üê≥ –ó–∞–ø—É—Å–∫ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..." $CYAN
    if [ "$(docker ps -a -q -f name=your_app_name)" ]; then
        echo -e "${GREEN}‚úî –û–±–Ω–∞—Ä—É–∂–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä${NC}"
        if ! ./vendor/bin/sail up -d; then
            handle_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è" "./vendor/bin/sail up -d"
        else
            echo -e "${GREEN}‚úî –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ${NC}"
        fi
    else
        echo -e "${YELLOW}‚ö† –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–µ—Ä–≤–∞—è —Å–±–æ—Ä–∫–∞...${NC}"
        if ! ./vendor/bin/sail up -d --build; then
            if grep -q "nameserver 8.8.8.8" /etc/resolv.conf && grep -q "nameserver 8.8.4.4" /etc/resolv.conf; then
                echo -e "${GREEN}‚úî DNS —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ${NC}"
            else
                if [ "$(id -u)" != "0" ]; then
                    echo -e "${RED}–î–ª—è —É—Å–ø–µ—à–Ω–æ–π —Å–±–æ—Ä–∫–∏ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –æ–±–Ω–æ–≤–∏—Ç—å —Ñ–∞–π–ª /etc/resolv.conf${NC}"
                fi

                if ! sudo ./updateresolvconf.sh; then
                    handle_error "–§–∞–π–ª /etc/resolv.conf –Ω–µ –±—ã–ª –æ–±–Ω–æ–≤–ª–µ–Ω!" "sudo ./updateresolvconf.sh"
                else
                    echo -e "${BLUE}‚úî DNS —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã${NC}"
                fi
            fi

            if ! ./vendor/bin/sail up -d --build; then
                handle_error "–ü–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–ø—ã—Ç–∫–∞ —Å–±–æ—Ä–∫–∏ –Ω–µ —É–≤–µ–Ω—á–∞–ª–∞—Å—å —É—Å–ø–µ—Ö–æ–º" "./vendor/bin/sail up -d --build"
            fi
        else
            echo -e "${GREEN}‚úî –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–Ω –∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ${NC}"
        fi
    fi
    echo

    print_with_effect "üîÑ –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π –∏ —Å–∏–¥–∏—Ä–æ–≤–∞–Ω–∏—è..." $CYAN
    print_with_effect "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ (20 —Å–µ–∫)..." $YELLOW
    sleep 20

    (./vendor/bin/sail restart > /dev/null 2>&1) &
    spinner $!

    print_with_effect "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î (20 —Å–µ–∫)..." $YELLOW
    sleep 20

    print_with_effect "üîÑ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π..." $CYAN
    (./vendor/bin/sail artisan migrate > /dev/null 2>&1) &
    spinner $!

    print_with_effect "üå± –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..." $CYAN
    (./vendor/bin/sail artisan migrate:fresh --seed > /dev/null 2>&1) &
    spinner $!

    print_with_effect "üîó –°–æ–∑–¥–∞–Ω–∏–µ —Å–∏–º–ª–∏–Ω–∫–æ–≤..." $CYAN
    (./vendor/bin/sail artisan storage:link > /dev/null 2>&1) &
    spinner $!

    print_with_effect "‚è≥ –§–∏–Ω–∞–ª—å–Ω—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ (20 —Å–µ–∫)..." $YELLOW
    sleep 20
    (./vendor/bin/sail restart > /dev/null 2>&1) &
    spinner $!
    echo

    # –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    echo -e "${MAGENTA}"
    echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
    echo "‚ïë                                                ‚ïë"
    echo "‚ïë          –£–°–¢–ê–ù–û–í–ö–ê –£–°–ü–ï–®–ù–û –ó–ê–í–ï–†–®–ï–ù–ê!         ‚ïë"
    echo "‚ïë                                                ‚ïë"
    echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
    echo -e "${NC}"
    echo -e "${BLUE}üåê –°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ —Å—Å—ã–ª–∫–µ:${NC} http://$IP_ADDRESS:80"
    echo -e "${BLUE}üîë –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è:${NC}"
    echo -e "${GREEN}    üë§ –õ–æ–≥–∏–Ω: Team A${NC}"
    echo -e "${GREEN}    üîí –ü–∞—Ä–æ–ª—å: 1111${NC}"
    echo
    print_with_effect "üöÄ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!" $GREEN
    chmod -R 755 storage/framework > /dev/null 2>&1
    chmod -R 755 storage/app > /dev/null 2>&1
    chmod 755 public > /dev/null 2>&1
else
    handle_error "–ù–µ –Ω–∞–π–¥–µ–Ω –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª .env –ª–∏–±–æ .env.example. –ë–µ–∑ –æ–¥–Ω–æ–≥–æ –∏–∑ —ç—Ç–∏—Ö —Ñ–∞–π–ª–æ–≤ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞!"
fi
